<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:websocket="http://www.springframework.org/schema/websocket"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

  <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
  
  <!-- Enables the Spring MVC @Controller programming model -->
  <annotation-driven />

  <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
  <resources mapping="/resources/**" location="/resources/" />

  <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
  <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <beans:property name="prefix" value="/WEB-INF/views/" />
    <beans:property name="suffix" value=".jsp" />
  </beans:bean>
  
  <context:component-scan base-package="com.kh.workman" />

  <!-- 인터셉터 등록하기 -->
  <interceptors>
    <interceptor>
      <!-- ** apply interceptor to all mapping to enable logs -->
      <!-- <mapping path="/**" /> -->
      <!-- exclude mapping -->
      <mapping path="/job/*" />
      <exclude-mapping path="/*.png" />
      <exclude-mapping path="/*.jpg" />
      <beans:bean id="loggerInterceptor" class="com.kh.workman.common.interceptor.LoggerInterceptor" />
    </interceptor>
  </interceptors>

  <!-- commons-fileupload -->
  <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
    <beans:property name="maxUploadSize" value="1048750" />
  </beans:bean>
  
  <!-- jsonView 등록하기 -->
  <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
    <beans:property name="order" value="1" />
  </beans:bean>
  <beans:bean id="jasonView" class="net.sf.json.spring.web.servlet.view.JsonView" />

  <!-- jackson -->
  <beans:bean id="jacksonMessageConverter"
      class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>

  <!-- jackson handler -->
  <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
  	<beans:property name="messageConverters">
  		<beans:list>
  			<beans:ref bean="jacksonMessageConverter"/>
  		</beans:list>
  	</beans:property>
  </beans:bean>
  
  
  <beans:bean id="myHandler" class="com.kh.workman.collabo.controller.CollaboHandler"/>
  
  <websocket:handlers>
  	<websocket:mapping handler="myHandler" path="/collabo/soc"/>
		<websocket:sockjs></websocket:sockjs>
  </websocket:handlers>
  
  <!-- jackson JSON UTF-8 setting! -->
  <annotation-driven>
    <message-converters>
    <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
      <beans:property name="supportedMediaTypes">
        <beans:list>
          <beans:value>text/html;charset=UTF-8</beans:value>
          <beans:value>application/json;charset=UTF-8</beans:value>
        </beans:list>
      </beans:property>
    </beans:bean>
    </message-converters>
  </annotation-driven>
  
  
</beans:beans>
